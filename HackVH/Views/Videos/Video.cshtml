@model VideoViewModel

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}
<h2>@Model.Video.Name</h2>
<h3>By @Model.Video.User.Email</h3>
<div  id="player" src="@Model.Video.VideoUrl"></div>

<script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      const vidId = new RegExp(/(?<=v=)[a-zA-Z0-9-]+(?=&)|(?<=[0-9])[^&\n]+|(?<=v=)[^&\n]+/gi).exec("@Model.Video.VideoUrl")[0].split("/")[0];
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          videoId: vidId,
          events: {
            'onReady': onPlayerReady
          }
        });
      }
      console.log(vidId);
      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }
</script>